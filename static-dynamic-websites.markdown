<h1>The Difference Between Static and Dynamic Websites</h1>

<p>Today I worked on a personal programming project (alliteration unintended ;)) - I wanted to see <em>just how hard</em> it is to build a JavaScript <a href="http://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop" target="_blank">REPL</a>. In short, it is really easy. You can the code behind mine at <a href="https://github.com/JoahG/jsrepl" target="_blank">JoahG/jsrepl</a> on GitHub. Through building (and then rebuilding) this, though, I recognized the opportunity to teach a very key difference in what makes Dynamic web frameworks <em>so</em> much more awesome than just a simple Static website.</p>

<p>First, to better define what <em>Static</em> and <em>Dynamic</em> actually mean: a <em>Static</em> website has all of its assets - the HTML, JavaScript, and CSS precompiled - all the code that you write will be directly translated into a web experience and put in your browser - pretty easy to understand, not a lot happening there. <em>Dynamic</em> websites are <em>dynamically</em> (hence the name) pieced together from the many assets that make up a single page - at no one time while making a Dynamic website does a coder have to code the <em>entire</em> page, he simply codes all the different <em>parts</em> of the page(s), and the server knows how to put them together appropriately.</p>

<p>The other thing separating Static and Dynamic websites is the fact that Dynamic websites <em>commonly</em> are attached to a database which is able to store/serve information as needed. Databases are used to store all kinds of information: user accounts, forum posts, blog posts, pictures, etc., etc.. Static sites (with the exception of PHP, which I despise wholeheartedly) <em>don&#8217;t</em> have access to databases, and must make due without it - limiting their functionality greatly.</p>

<p>As an example of how these differences effect actual websites/applications, I built two different versions of my REPL, <a href="http://git.joahg.com/jsrepl">one Static</a>, and <a href="jsrepl-joahg.herokuapp.com">one Dynamic</a>, using Ruby on Rails. All the HTML, JS, and CSS is essentially the same, the only difference is that the Dynamic version is connected to a database, where it can store code. The Dynamic version allows you to <em>save</em> your code, whereas the Static version requires you to save it elsewhere.</p>

<p>Now, to the people (namely @<a href="http://gracenut96.tumblr.com" target="_blank">gracenut96</a>) who like building Static websites more than Dynamic websites, I ask you, which of the versions of my project is <em>realistically</em> more useful? Really?</p>